#! /usr/bin/env tclsh

##################
## Module Name     --  machinery.tcl
## Original Author --  Emmanuel Frecon - emmanuel@sics.se
## Description:
##
##    Cluster handler through docker-machine
##
##################

package require Tcl 8.6;    # The cluster module requires chan pipe


# Arrange to access all libraries under lib sub-directory.  There is
# only one, but we want to be sure to be able to expand if necessary.
set resolvedArgv0 [file dirname [file normalize $argv0/___]];  # Trick to resolve last symlink
set dirname [file dirname [file normalize $resolvedArgv0]]
set appname [file rootname [file tail $resolvedArgv0]]
lappend auto_path [file join $dirname lib] [file join $dirname lib til]
package require cluster;   # This implements the core of our routines!
package require api::cli

#package require proctrace
#proctrace init -allowed [list ::cluster* ::api*]


# Parse global options out of program arguments.
cli globals $appname argv


# Extract command (the first item of the remaining arguments) and pass
# further the remaining arguments to the main command dispatcher.
cli command [lindex $argv 0] {*}[lrange $argv 1 end]


# TODO:
#
# Add external drivers that can be taken into account with the new
# generic type in docker machine.
#
# Use the port opening mappings as a way to restrict further access to
# the machines, app ports are closed, unless listed.  Implement on top
# of ufw, or directly on top of iptables.
#
# Implement an "inspect" command (returning JSON/YAML?), that can be
# ingested by other tools.
#
# Adapt to new --file - option in docker compose, so we don't generate
# temporary files anymore.
