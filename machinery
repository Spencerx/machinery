#! /usr/bin/env tclsh

##################
## Module Name     --  machinery.tcl
## Original Author --  Emmanuel Frecon - emmanuel@sics.se
## Description:
##
##    Cluster handler through docker-machine
##
##################

package require Tcl 8.6;    # The cluster module requires chan pipe


# Arrange to access all libraries under lib sub-directory.  There is
# only one, but we want to be sure to be able to expand if necessary.
set dirname [file dirname [file normalize [info script]]]
set appname [file rootname [file tail [info script]]]
lappend auto_path [file join $dirname lib] [file join $dirname lib til]
package require cluster;   # This implements the core of our routines!
package require api::cli


# Parse global options out of program arguments.
cli globals $appname argv


# Extract command (the first item of the remaining arguments) and pass
# further the remaining arguments to the main command dispatcher.
cli command [lindex $argv 0] {*}[lrange $argv 1 end]


# TODO:
#
# Add a -restrict option to command line commands such as forall, so
# as to be able to run commands on a restricted set of the cluster.
#
# Add external drivers that can be taken into account with the new
# generic type in docker machine.
#
# Use the port opening mappings as a way to restrict further access to
# the machines, app ports are closed, unless listed.  Implement on top
# of ufw, or directly on top of iptables.
#
# Move to use --engine-label for setting the labels, do this in a
# manner that respects machine versioning.
#
# Start supporting other OS than B2D, i.e. ubuntu. This is urgent.
#
# Implement a "ls" command, or similar, that would print out current
# information about the cluster.  Maybe also an "inspect" command
# (returning JSON/YAML?), that can be ingested by other tools.
#
# Resolve, whenever possible, relative file references in the generic
# "options", e.g. azure-subscripion-cert.
